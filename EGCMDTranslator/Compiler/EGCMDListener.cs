//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from EGCMD.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="EGCMDParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IEGCMDListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat([NotNull] EGCMDParser.StatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat([NotNull] EGCMDParser.StatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] EGCMDParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] EGCMDParser.CommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] EGCMDParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] EGCMDParser.TextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.repeatCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatCommand([NotNull] EGCMDParser.RepeatCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.repeatCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatCommand([NotNull] EGCMDParser.RepeatCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.writeCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteCommand([NotNull] EGCMDParser.WriteCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.writeCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteCommand([NotNull] EGCMDParser.WriteCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.setColorCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetColorCommand([NotNull] EGCMDParser.SetColorCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.setColorCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetColorCommand([NotNull] EGCMDParser.SetColorCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EGCMDParser.jsCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsCommand([NotNull] EGCMDParser.JsCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EGCMDParser.jsCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsCommand([NotNull] EGCMDParser.JsCommandContext context);
}
