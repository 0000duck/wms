//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from EMacroLexer.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class EMacroLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TEXT_SHARP=1, TEXT_AT=2, TEXT=3, WS=4, COMMAND_SHARP=5, REPEAT=6, AREA=7, 
		VAR=8, IN=9, WRITE=10, SET=11, COLOR=12, TABLE_COLUMNS=13, DIGIT=14, ID=15, 
		JS_SHARP=16, JS_AT=17, JSTEXT=18;
	public const int
		MODE_COMMAND=1, MODE_JSLEX=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "MODE_COMMAND", "MODE_JSLEX"
	};

	public static readonly string[] ruleNames = {
		"TEXT_SHARP", "TEXT_AT", "TEXT", "WS", "COMMAND_SHARP", "REPEAT", "AREA", 
		"VAR", "IN", "WRITE", "SET", "COLOR", "TABLE_COLUMNS", "DIGIT", "ID", 
		"JS_SHARP", "JS_AT", "JSTEXT"
	};


	public EMacroLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public EMacroLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'REPEAT'", "'AREA'", "'VAR'", "'IN'", 
		"'WRITE'", "'SET'", "'COLOR'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TEXT_SHARP", "TEXT_AT", "TEXT", "WS", "COMMAND_SHARP", "REPEAT", 
		"AREA", "VAR", "IN", "WRITE", "SET", "COLOR", "TABLE_COLUMNS", "DIGIT", 
		"ID", "JS_SHARP", "JS_AT", "JSTEXT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "EMacroLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static EMacroLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\x96', '\b', '\x1', '\b', '\x1', '\b', '\x1', 
		'\x4', '\x2', '\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', 
		'\x4', '\x4', '\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', 
		'\t', '\a', '\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', 
		'\t', '\n', '\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', 
		'\t', '\r', '\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', 
		'\x10', '\t', '\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', 
		'\x12', '\x4', '\x13', '\t', '\x13', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x6', '\x4', '\x33', '\n', '\x4', '\r', '\x4', '\xE', 
		'\x4', '\x34', '\x3', '\x5', '\x6', '\x5', '\x38', '\n', '\x5', '\r', 
		'\x5', '\xE', '\x5', '\x39', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x6', '\xE', 'p', '\n', '\xE', '\r', '\xE', '\xE', '\xE', 'q', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x6', '\xF', '\x7F', '\n', '\xF', '\r', '\xF', '\xE', '\xF', '\x80', 
		'\x3', '\x10', '\x3', '\x10', '\a', '\x10', '\x85', '\n', '\x10', '\f', 
		'\x10', '\xE', '\x10', '\x88', '\v', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x13', '\x6', '\x13', '\x93', '\n', '\x13', '\r', 
		'\x13', '\xE', '\x13', '\x94', '\x2', '\x2', '\x14', '\x5', '\x3', '\a', 
		'\x4', '\t', '\x5', '\v', '\x6', '\r', '\a', '\xF', '\b', '\x11', '\t', 
		'\x13', '\n', '\x15', '\v', '\x17', '\f', '\x19', '\r', '\x1B', '\xE', 
		'\x1D', '\xF', '\x1F', '\x10', '!', '\x11', '#', '\x12', '%', '\x13', 
		'\'', '\x14', '\x5', '\x2', '\x3', '\x4', '\b', '\x4', '\x2', '%', '%', 
		'\x42', '\x42', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x3', 
		'\x2', '\"', '\"', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', 
		'\x63', '|', '\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', '\x2', 
		'\x99', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x3', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\r', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x3', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x13', '\x3', '\x2', '\x2', '\x2', '\x3', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x17', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '!', '\x3', '\x2', '\x2', '\x2', '\x4', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x4', '%', '\x3', '\x2', '\x2', '\x2', '\x4', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x5', ')', '\x3', '\x2', '\x2', '\x2', 
		'\a', '-', '\x3', '\x2', '\x2', '\x2', '\t', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\v', '\x37', '\x3', '\x2', '\x2', '\x2', '\r', '=', '\x3', '\x2', 
		'\x2', '\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', '\x11', '\x46', 
		'\x3', '\x2', '\x2', '\x2', '\x13', 'K', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x17', 'T', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\\', '\x3', '\x2', '\x2', '\x2', '\x1B', '`', '\x3', '\x2', '\x2', 
		'\x2', '\x1D', 'h', '\x3', '\x2', '\x2', '\x2', '\x1F', '~', '\x3', '\x2', 
		'\x2', '\x2', '!', '\x82', '\x3', '\x2', '\x2', '\x2', '#', '\x89', '\x3', 
		'\x2', '\x2', '\x2', '%', '\x8D', '\x3', '\x2', '\x2', '\x2', '\'', '\x92', 
		'\x3', '\x2', '\x2', '\x2', ')', '*', '\a', '%', '\x2', '\x2', '*', '+', 
		'\x3', '\x2', '\x2', '\x2', '+', ',', '\b', '\x2', '\x2', '\x2', ',', 
		'\x6', '\x3', '\x2', '\x2', '\x2', '-', '.', '\a', '\x42', '\x2', '\x2', 
		'.', '/', '\x3', '\x2', '\x2', '\x2', '/', '\x30', '\b', '\x3', '\x3', 
		'\x2', '\x30', '\b', '\x3', '\x2', '\x2', '\x2', '\x31', '\x33', '\n', 
		'\x2', '\x2', '\x2', '\x32', '\x31', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\x34', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x34', '\x35', '\x3', '\x2', '\x2', '\x2', '\x35', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x36', '\x38', '\t', '\x3', '\x2', '\x2', '\x37', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x38', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x39', '\x37', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\x3', 
		'\x2', '\x2', '\x2', ':', ';', '\x3', '\x2', '\x2', '\x2', ';', '<', '\b', 
		'\x5', '\x4', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', '=', '>', 
		'\a', '%', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', 
		'@', '\a', 'T', '\x2', '\x2', '@', '\x41', '\a', 'G', '\x2', '\x2', '\x41', 
		'\x42', '\a', 'R', '\x2', '\x2', '\x42', '\x43', '\a', 'G', '\x2', '\x2', 
		'\x43', '\x44', '\a', '\x43', '\x2', '\x2', '\x44', '\x45', '\a', 'V', 
		'\x2', '\x2', '\x45', '\x10', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', 
		'\a', '\x43', '\x2', '\x2', 'G', 'H', '\a', 'T', '\x2', '\x2', 'H', 'I', 
		'\a', 'G', '\x2', '\x2', 'I', 'J', '\a', '\x43', '\x2', '\x2', 'J', '\x12', 
		'\x3', '\x2', '\x2', '\x2', 'K', 'L', '\a', 'X', '\x2', '\x2', 'L', 'M', 
		'\a', '\x43', '\x2', '\x2', 'M', 'N', '\a', 'T', '\x2', '\x2', 'N', '\x14', 
		'\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', 'K', '\x2', '\x2', 'P', 'Q', 
		'\a', 'P', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', 'S', 
		'\b', '\n', '\x3', '\x2', 'S', '\x16', '\x3', '\x2', '\x2', '\x2', 'T', 
		'U', '\a', 'Y', '\x2', '\x2', 'U', 'V', '\a', 'T', '\x2', '\x2', 'V', 
		'W', '\a', 'K', '\x2', '\x2', 'W', 'X', '\a', 'V', '\x2', '\x2', 'X', 
		'Y', '\a', 'G', '\x2', '\x2', 'Y', 'Z', '\x3', '\x2', '\x2', '\x2', 'Z', 
		'[', '\b', '\v', '\x3', '\x2', '[', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'\\', ']', '\a', 'U', '\x2', '\x2', ']', '^', '\a', 'G', '\x2', '\x2', 
		'^', '_', '\a', 'V', '\x2', '\x2', '_', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x61', '\a', '\x45', '\x2', '\x2', '\x61', '\x62', '\a', 'Q', '\x2', 
		'\x2', '\x62', '\x63', '\a', 'N', '\x2', '\x2', '\x63', '\x64', '\a', 
		'Q', '\x2', '\x2', '\x64', '\x65', '\a', 'T', '\x2', '\x2', '\x65', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\b', '\r', '\x3', '\x2', 'g', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\a', 'V', '\x2', '\x2', 
		'i', 'j', '\a', '\x43', '\x2', '\x2', 'j', 'k', '\a', '\x44', '\x2', '\x2', 
		'k', 'l', '\a', 'N', '\x2', '\x2', 'l', 'm', '\a', 'G', '\x2', '\x2', 
		'm', 'o', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\t', '\x4', '\x2', '\x2', 
		'o', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 
		'q', 'o', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', '\x2', '\x2', 
		'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 't', '\a', '\x45', '\x2', '\x2', 
		't', 'u', '\a', 'Q', '\x2', '\x2', 'u', 'v', '\a', 'N', '\x2', '\x2', 
		'v', 'w', '\a', 'W', '\x2', '\x2', 'w', 'x', '\a', 'O', '\x2', '\x2', 
		'x', 'y', '\a', 'P', '\x2', '\x2', 'y', 'z', '\a', 'U', '\x2', '\x2', 
		'z', '{', '\x3', '\x2', '\x2', '\x2', '{', '|', '\b', '\xE', '\x3', '\x2', 
		'|', '\x1E', '\x3', '\x2', '\x2', '\x2', '}', '\x7F', '\t', '\x5', '\x2', 
		'\x2', '~', '}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '\x81', ' ', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x86', '\t', '\x6', '\x2', '\x2', '\x83', '\x85', '\t', '\a', '\x2', 
		'\x2', '\x84', '\x83', '\x3', '\x2', '\x2', '\x2', '\x85', '\x88', '\x3', 
		'\x2', '\x2', '\x2', '\x86', '\x84', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\x3', '\x2', '\x2', '\x2', '\x87', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x86', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', 
		'%', '\x2', '\x2', '\x8A', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8C', '\b', '\x11', '\x2', '\x2', '\x8C', '$', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8E', '\a', '\x42', '\x2', '\x2', '\x8E', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\b', '\x12', '\x3', '\x2', '\x90', 
		'&', '\x3', '\x2', '\x2', '\x2', '\x91', '\x93', '\n', '\x2', '\x2', '\x2', 
		'\x92', '\x91', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', 
		'\x3', '\x2', '\x2', '\x2', '\x95', '(', '\x3', '\x2', '\x2', '\x2', '\v', 
		'\x2', '\x3', '\x4', '\x34', '\x39', 'q', '\x80', '\x86', '\x94', '\x5', 
		'\x4', '\x3', '\x2', '\x4', '\x4', '\x2', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
